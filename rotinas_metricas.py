# imports e defini√ß√µes
import pandas as pd
import time
import numpy as np
import matplotlib.pyplot as plt
from datetime import date, timedelta
import streamlit as st
import math
from PIL import Image
import plotly.express as px

# Importa√ß√µes de CSVs
avaliacao_somativa_namespace = pd.read_csv('./CSV/Avalia√ß√£o Somativa/avaliacao_somativa.csv')
avaliacao_somativa_namespace2 = avaliacao_somativa_namespace[avaliacao_somativa_namespace['M√©dia'] > 0]

## T√≠tulo do relat√≥rio
st.image('[LOGO] Eduqo.png')

st.title('Relat√≥rio de Acompanhamento de Escolas/Redes')

image = Image.open('[LOGO] Eduqo.png')
st.sidebar.image(image,caption='Eduqo - Plataforma QM√°gico',use_column_width=True)

st.sidebar.markdown('Feito por : Alexandre Fernandes (Padre)')

## Introdu√ß√£o
st.subheader('Os dados analisados s√£o do per√≠odo entre 01/06/2021 e 29/08/2021')

## Resultados gerais

# Quartis Avalia√ß√£o Somativa
quartil = (avaliacao_somativa_namespace2['M√©dia'].max() - avaliacao_somativa_namespace2['M√©dia'].min())/4
maximo = avaliacao_somativa_namespace2['M√©dia'].max()
minimo = avaliacao_somativa_namespace2['M√©dia'].min()
avaliacao_somativa_namespace4 = avaliacao_somativa_namespace2.copy()
avaliacao_somativa_namespace4['Quartil'] = '0¬∫'
for i in range(len(avaliacao_somativa_namespace2['M√©dia'])):
    if (avaliacao_somativa_namespace2['M√©dia'][i] >= minimo and avaliacao_somativa_namespace2['M√©dia'][i] < quartil + minimo):
        avaliacao_somativa_namespace4['Quartil'][i] = '4¬∫'    
    if (avaliacao_somativa_namespace2['M√©dia'][i] >= minimo + quartil and avaliacao_somativa_namespace2['M√©dia'][i] < 2*quartil + minimo):
        avaliacao_somativa_namespace4['Quartil'][i] = '3¬∫'  
    if (avaliacao_somativa_namespace2['M√©dia'][i] >= minimo + 2*quartil and avaliacao_somativa_namespace2['M√©dia'][i] < 3*quartil + minimo):
        avaliacao_somativa_namespace4['Quartil'][i] = '2¬∫'  
    if (avaliacao_somativa_namespace2['M√©dia'][i] >= minimo + 3*quartil and avaliacao_somativa_namespace2['M√©dia'][i] <= 4*quartil + minimo):
        avaliacao_somativa_namespace4['Quartil'][i] = '1¬∫'  


## Sele√ß√£o do namespace a ser analisado
namespace_select = st.sidebar.selectbox('Selecione um namespace', avaliacao_somativa_namespace2['namespace'])

st.subheader('Namespace selecionado: **'+namespace_select+'**')

### Rotinas
st.header('Rotinas Pedag√≥gicas Digitais')
st.image('Rotinas Pedag√≥gicas Digitais.png', use_column_width=True, caption='Rotinas Pedag√≥gicas Digitais')

## Rotina de Avalia√ß√£o Somativa

## Leitura do csv com as m√©tricas de Avalia√ß√£o Somativa
#avaliacao_somativa_namespace = pd.read_csv('../CSV/Avalia√ß√£o Somativa/avaliacao_somativa.csv')
avaliacao_somativa_namespace5 = avaliacao_somativa_namespace4.drop(columns = 'Unnamed: 0')
avaliacao_somativa_namespace5.rename(columns = {"('Cria√ß√£o de AA', '')":'Cria√ß√£o de AA'}, inplace = True)

avaliacao_somativa_namespace_select = avaliacao_somativa_namespace5[avaliacao_somativa_namespace5['namespace'] == namespace_select].reset_index(drop = True)
# M√©dia do namespace
st.markdown(
        """
        <style>
            .stProgress > div > div > div > div {
                background-color: #4A8AE8;
        }
        </style>""",
        unsafe_allow_html=True,
    )

st.subheader('**Avalia√ß√£o Somativa'+' (Pontua√ß√£o: '+str(round(100*avaliacao_somativa_namespace_select['M√©dia'][0], 2))+')**')
st.markdown('***O namespace '+namespace_select+ ' est√° no '+avaliacao_somativa_namespace_select['Quartil'][0]+ ' quartil!***') 
st.progress(avaliacao_somativa_namespace_select['M√©dia'][0])

ver_destaque_avaliacao_somativa = st.radio('Voc√™ deseja visualizar os namespaces destaque em Avalia√ß√£o Somativa? üìà',('N√£o','Sim'))

avaliacao_somativa_namespace6 = avaliacao_somativa_namespace5.copy()
avaliacao_somativa_namespace6['M√©dia'] = round(100*avaliacao_somativa_namespace6['M√©dia'],2)
avaliacao_somativa_namespace6.rename(columns = {'M√©dia':'M√©dia (0 a 100)'}, inplace = True)
avaliacao_somativa_namespace7 = avaliacao_somativa_namespace6.drop(columns = ['Porcentagem de engajamento em AAs','M√©dia de AAs por turma','M√©dia de exerc√≠cios por turma','Corre√ß√£o de exerc√≠cios discursivos','Cria√ß√£o de AA','Publica√ß√£o da AA','Acesso √† relat√≥rios de AA por aluno','Porcentagem de visualiza√ß√£o de relat√≥rios de AA por professor','Porcentagem de administradores que visualizaram relat√≥rios de AA'])
    
if ver_destaque_avaliacao_somativa == 'Sim':
    avaliacao_somativa_namespace8 = avaliacao_somativa_namespace7.drop(columns = ['Quartil'])
    avaliacao_somativa_namespace9 = avaliacao_somativa_namespace8.loc[0:19]
    avaliacao_somativa_namespace9['Medalha'] = ''
    for i in range(20):
        if i == 0:
            avaliacao_somativa_namespace9['Medalha'][i] = 'ü•á'
        if i == 1:
            avaliacao_somativa_namespace9['Medalha'][i] = 'ü•à'
        if i == 2:
            avaliacao_somativa_namespace9['Medalha'][i] = 'ü•â'
        if i > 2:
            avaliacao_somativa_namespace9['Medalha'][i] = '  '   
    avaliacao_somativa_namespace9.set_index('Medalha', inplace=True)
    avaliacao_somativa_namespace10 = avaliacao_somativa_namespace9.style.format({"M√©dia (0 a 100)":"{:,.2f}"})
    st.table(avaliacao_somativa_namespace10)


ver_quartil_avaliacao_somativa = st.radio('Escolha o quartil que deseja ver os resultados üìà',('Nenhum','1¬∫','2¬∫','3¬∫','4¬∫'))
if ver_quartil_avaliacao_somativa == '1¬∫':
    avaliacao_somativa_namespace_quartil1 = avaliacao_somativa_namespace7[avaliacao_somativa_namespace7['Quartil'] == '1¬∫']
    avaliacao_somativa_namespace_quartil1.set_index('Quartil', inplace=True)
    st.table(avaliacao_somativa_namespace_quartil1)
if ver_quartil_avaliacao_somativa == '2¬∫':
    avaliacao_somativa_namespace_quartil2 = avaliacao_somativa_namespace7[avaliacao_somativa_namespace7['Quartil'] == '2¬∫']
    avaliacao_somativa_namespace_quartil2.set_index('Quartil', inplace=True)
    st.table(avaliacao_somativa_namespace_quartil2)
if ver_quartil_avaliacao_somativa == '3¬∫':
    avaliacao_somativa_namespace_quartil3 = avaliacao_somativa_namespace7[avaliacao_somativa_namespace7['Quartil'] == '3¬∫']
    avaliacao_somativa_namespace_quartil3.set_index('Quartil', inplace=True)
    st.table(avaliacao_somativa_namespace_quartil3)
if ver_quartil_avaliacao_somativa == '4¬∫':
    avaliacao_somativa_namespace_quartil4 = avaliacao_somativa_namespace7[avaliacao_somativa_namespace7['Quartil'] == '4¬∫']    
    avaliacao_somativa_namespace_quartil4.set_index('Quartil', inplace=True)
    st.table(avaliacao_somativa_namespace_quartil4)
    

check_box_avaliacao_somativa = st.checkbox('Selecione para visualizar os resultados de Avalia√ß√£o Somativa do namespace por m√©trica.')
var = []
if check_box_avaliacao_somativa == True:
    for coluna in avaliacao_somativa_namespace_select.loc[:,'Porcentagem de engajamento em AAs':'Porcentagem de administradores que visualizaram relat√≥rios de AA']:
        st.markdown('**'+coluna+' (Pontua√ß√£o: '+str(round(100*avaliacao_somativa_namespace_select[coluna][0], 2))+')**') 
        if coluna == 'Porcentagem de engajamento em AAs':
            #engajamento_aluno_aa = pd.read_csv('../CSV/Avalia√ß√£o Somativa/engajamento_aluno_aa.csv')
            #engajamento_aluno_aa2 = engajamento_aluno_aa[engajamento_aluno_aa['namespace'] == namespace_select].reset_index()
            #st.write('Engajamento: '+ str(round(100*avaliacao_somativa_namespace_select[coluna][0], 2))+ '%')
            st.write('Essa m√©trica consiste na raz√£o entre o n√∫mero de exerc√≠cios realizados em rela√ß√£o aos disponibilizados (m√©dia entre os alunos)')
        #if coluna == 'M√©dia de AAs por turma':
            #media_ex_aa_turma = pd.read_csv('../CSV/Avalia√ß√£o Somativa/media_ex_aa_turma.csv')
            #media_ex_aa_turma['M√©dia de AAs por turma'] = (media_ex_aa_turma['M√©dia de AAs por turma'] - media_ex_aa_turma['M√©dia de AAs por turma'].min())/(media_ex_aa_turma['M√©dia de AAs por turma'].max() - media_ex_aa_turma['M√©dia de AAs por turma'].min())
            #media_ex_aa_turma['M√©dia de exerc√≠cios por turma'] = (media_ex_aa_turma['M√©dia de exerc√≠cios por turma'] - media_ex_aa_turma['M√©dia de exerc√≠cios por turma'].min())/(media_ex_aa_turma['M√©dia de exerc√≠cios por turma'].max() - media_ex_aa_turma['M√©dia de exerc√≠cios por turma'].min())
            #media_ex_aa_turma2 = media_ex_aa_turma[media_ex_aa_turma['namespace'] == namespace_select].reset_index()
            #media_ex_aa_turma3 = media_ex_aa_turma2.groupby('namespace').mean().reset_index()
            #st.dataframe(media_ex_aa_turma3)
        if coluna == 'Corre√ß√£o de exerc√≠cios discursivos':
            st.write('Essa m√©trica consiste no tempo m√©dio de corre√ß√£o de exerc√≠cios discursivos por quest√£o por aluno')
        if coluna == 'Cria√ß√£o de AA':
            st.write('Essa m√©trica consiste no tempo m√©dio entre a cria√ß√£o da AA e sua publica√ß√£o')
        if coluna == 'Publica√ß√£o da AA':
            st.write('Essa m√©trica consiste no tempo m√©dio entre a publica√ß√£o da AA e seu in√≠cio')
        if coluna == 'Acesso √† relat√≥rios de AA por aluno':
            st.write('Essa m√©trica consiste na raz√£o entre o n√∫mero de AAs diferentes que o aluno visualizou o relat√≥rio e o n√∫mero de AAs que esteve disponibilizado para ele.')
        if coluna == 'Porcentagem de visualiza√ß√£o de relat√≥rios de AA por professor':
            st.write('Essa m√©trica consiste na raz√£o entre o n√∫mero de AAs diferentes que o professor viu o relat√≥rio dentre as que ele √© corretor/dono n√∫mero.')
        st.progress(avaliacao_somativa_namespace_select[coluna][0])

########################################################################################################

## Rotina de Avalia√ß√£o Diagn√≥stica