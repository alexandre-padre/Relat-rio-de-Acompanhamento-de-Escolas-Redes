# imports e defini√ß√µes
import pandas as pd
import time
import numpy as np
import matplotlib.pyplot as plt
from datetime import date, timedelta
import streamlit as st
import math
from PIL import Image
import plotly.express as px
from funcoes import *

# Importa√ß√µes de CSVs
avaliacao_somativa_namespace = pd.read_csv('./CSV/Avalia√ß√£o Somativa/avaliacao_somativa.csv')
avaliacao_somativa_namespace2 = avaliacao_somativa_namespace[avaliacao_somativa_namespace['M√©dia'] > 0]

## T√≠tulo do relat√≥rio
st.image('[LOGO] Eduqo.png')
st.title('Relat√≥rio de Acompanhamento de Escolas/Redes')

## Barra lateral
image = Image.open('[LOGO] Eduqo.png')
st.sidebar.image(image,caption='Eduqo - Plataforma QM√°gico',use_column_width=True)
st.sidebar.markdown('Feito por : Alexandre Fernandes (Padre)')
st.sidebar.write("Reposit√≥rio Github: [link] (https://github.com/alexandre-padre/Relat-rio-de-Acompanhamento-de-Escolas-Redes.git)")

## Introdu√ß√£o
st.subheader('Os dados analisados s√£o do per√≠odo entre 01/06/2021 e 29/08/2021')

## Sele√ß√£o do namespace a ser analisado
namespace_select = st.sidebar.selectbox('Selecione um namespace', avaliacao_somativa_namespace2['namespace'])

st.subheader('Namespace selecionado: **'+namespace_select+'**')

### Rotinas
st.header('**Rotinas Pedag√≥gicas Digitais**')

st.image('Rotinas Pedag√≥gicas Digitais.png', use_column_width=True, caption='Rotinas Pedag√≥gicas Digitais')

## Rotina de Avalia√ß√£o Diagn√≥stica (Geral)

avaliacao_diagnostica_namespace = pd.read_csv('./CSV/Avalia√ß√£o Diagn√≥stica/avaliacao_diagnostica.csv')

# Quartis Avalia√ß√£o Diagn√≥stica
avaliacao_diagnostica_namespace_aux = quartis(avaliacao_diagnostica_namespace,'M√©dia')

avaliacao_diagnostica_namespace2 = avaliacao_diagnostica_namespace_aux.drop(columns = 'Unnamed: 0')

avaliacao_diagnostica_namespace_select = avaliacao_diagnostica_namespace2[avaliacao_diagnostica_namespace2['namespace'] == namespace_select].reset_index(drop = True)

# M√©dia do namespace
if avaliacao_diagnostica_namespace_select['M√©dia'][0] >= avaliacao_diagnostica_namespace2['M√©dia'].mean():
    comparativo_media_avaliacao_somativa = ' üü©'
else:
    comparativo_media_avaliacao_somativa = ' üü®'
st.subheader('**Avalia√ß√£o Diagn√≥stica'+' (Pontua√ß√£o: '+str(round(100*avaliacao_diagnostica_namespace_select['M√©dia'][0], 2))+comparativo_media_avaliacao_somativa+')**')
st.markdown('***O namespace '+namespace_select+ ' est√° no '+avaliacao_diagnostica_namespace_select['Quartil'][0]+ ' quartil!***') 
st.progress(avaliacao_diagnostica_namespace_select['M√©dia'][0])
st.write('Pontua√ß√£o **M√©dia Eduqo: '+str(round(100*avaliacao_diagnostica_namespace2['M√©dia'].mean(), 2))+'**')

## Rotina de Avalia√ß√£o Somativa (Geral)

# Quartis Avalia√ß√£o Somativa
avaliacao_somativa_namespace4 = quartis(avaliacao_somativa_namespace2,'M√©dia')

avaliacao_somativa_namespace5 = avaliacao_somativa_namespace4.drop(columns = 'Unnamed: 0')
avaliacao_somativa_namespace5.rename(columns = {"('Cria√ß√£o de AA', '')":'Cria√ß√£o de AA'}, inplace = True)

avaliacao_somativa_namespace_select = avaliacao_somativa_namespace5[avaliacao_somativa_namespace5['namespace'] == namespace_select].reset_index(drop = True)

# M√©dia do namespace
if avaliacao_somativa_namespace_select['M√©dia'][0] >= avaliacao_somativa_namespace5['M√©dia'].mean():
    comparativo_media_avaliacao_somativa = ' üü©'
else:
    comparativo_media_avaliacao_somativa = ' üü®'
st.subheader('**Avalia√ß√£o Somativa'+' (Pontua√ß√£o: '+str(round(100*avaliacao_somativa_namespace_select['M√©dia'][0], 2))+comparativo_media_avaliacao_somativa+')**')
st.markdown('***O namespace '+namespace_select+ ' est√° no '+avaliacao_somativa_namespace_select['Quartil'][0]+ ' quartil!***') 
st.progress(avaliacao_somativa_namespace_select['M√©dia'][0])
st.write('Pontua√ß√£o **M√©dia Eduqo: '+str(round(100*avaliacao_somativa_namespace5['M√©dia'].mean(), 2))+'**')
######################################################################################################

st.subheader('**M√©tricas detalhadas de cada rotina pedag√≥gica**')

## Rotina de Avalia√ß√£o Diagn√≥stica
st.markdown('**Avalia√ß√£o Diagn√≥stica**')

# Ajustes na tabela de Avalia√ß√£o Diagn√≥stica
avaliacao_diagnostica_namespace3 = avaliacao_diagnostica_namespace2.copy()
avaliacao_diagnostica_namespace3['M√©dia'] = round(100*avaliacao_diagnostica_namespace3['M√©dia'],2)
avaliacao_diagnostica_namespace3.rename(columns = {'M√©dia':'M√©dia (0 a 100)'}, inplace = True)

avaliacao_diagnostica_namespace4 = pd.DataFrame()
for coluna in avaliacao_diagnostica_namespace3.columns:
    if (coluna == 'namespace' or coluna == 'M√©dia (0 a 100)' or coluna == 'Quartil'):
        avaliacao_diagnostica_namespace4[coluna] = avaliacao_diagnostica_namespace3[coluna]


# Visualiza√ß√£o dos namespaces destaque
with st.expander("Visualizar as escolas destaque em Avalia√ß√£o Diagn√≥stica -> (clique aqui üñ±Ô∏è)"):
    avaliacao_diagnostica_namespace5 = destaques_rotina(avaliacao_diagnostica_namespace4)
    st.table(avaliacao_diagnostica_namespace5)

# Visualiza√ß√£o dos quartis
ver_quartil_avaliacao_diagnostica = st.radio('Escolha o quartil que deseja ver os resultados de Avalia√ß√£o Diagn√≥stica üìà',('Nenhum','1¬∫','2¬∫','3¬∫','4¬∫'))
if ver_quartil_avaliacao_diagnostica != 'Nenhum':
    avaliacao_diagnostica_namespace_quartil = visualizacao_resultado_quartil(ver_quartil_avaliacao_diagnostica,avaliacao_diagnostica_namespace4)
    st.table(avaliacao_diagnostica_namespace_quartil)

# Visualiza√ß√£o das m√©tricas do namespace selecionado
with st.expander("Visualizar os resultados de Avalia√ß√£o Diagn√≥stica do namespace selecionado por m√©trica -> (clique aqui üñ±Ô∏è)"):
    for coluna in avaliacao_diagnostica_namespace_select.loc[:,'N¬∫ de AAs copiadas da estante m√°gica e aplicada':'M√©dia de exerc√≠cios em relat√≥rios de AD por turma']:
        if avaliacao_diagnostica_namespace_select[coluna][0] >= avaliacao_diagnostica_namespace2[coluna].mean():
            comparativo_media_avaliacao_diagnostica = ' üü©'
        else:
            comparativo_media_avaliacao_diagnostica = ' üü®'
        st.markdown('**'+coluna+' (Pontua√ß√£o: '+str(round(100*avaliacao_diagnostica_namespace_select[coluna][0], 2))+comparativo_media_avaliacao_diagnostica+')**') 
        st.progress(avaliacao_diagnostica_namespace_select[coluna][0])
        st.write('Pontua√ß√£o **M√©dia Eduqo: '+str(round(100*avaliacao_diagnostica_namespace2[coluna].mean(), 2))+'**')

########################################################################################################

## Rotina de Avalia√ß√£o Somativa
st.markdown(
        """
        <style>
            .stProgress > div > div > div > div {
                background-color: #4A8AE8;
        }
        </style>""",
        unsafe_allow_html=True,
    )

# Ajustes na tabela de Avalia√ß√£o Somativa
avaliacao_somativa_namespace6 = avaliacao_somativa_namespace5.copy()
avaliacao_somativa_namespace6['M√©dia'] = round(100*avaliacao_somativa_namespace6['M√©dia'],2)
avaliacao_somativa_namespace6.rename(columns = {'M√©dia':'M√©dia (0 a 100)'}, inplace = True)
avaliacao_somativa_namespace7 = avaliacao_somativa_namespace6.drop(columns = ['Porcentagem de engajamento em AAs','M√©dia de AAs por turma','M√©dia de exerc√≠cios por turma','Corre√ß√£o de exerc√≠cios discursivos','Cria√ß√£o de AA','Publica√ß√£o da AA','Acesso √† relat√≥rios de AA por aluno','Porcentagem de visualiza√ß√£o de relat√≥rios de AA por professor','Porcentagem de administradores que visualizaram relat√≥rios de AA'])

st.markdown('**Avalia√ß√£o Somativa**')

# Visualiza√ß√£o dos namespaces destaque
with st.expander("Visualizar as escolas destaque em Avalia√ß√£o Somativa -> (clique aqui üñ±Ô∏è)"):
    avaliacao_somativa_namespace8 = destaques_rotina(avaliacao_somativa_namespace7)
    st.table(avaliacao_somativa_namespace8)

# Visualiza√ß√£o dos quartis
ver_quartil_avaliacao_somativa = st.radio('Escolha o quartil que deseja ver os resultados de Avalia√ß√£o Somativa üìà',('Nenhum','1¬∫','2¬∫','3¬∫','4¬∫'))
if ver_quartil_avaliacao_somativa != 'Nenhum':
    avaliacao_somativa_namespace_quartil = visualizacao_resultado_quartil(ver_quartil_avaliacao_somativa,avaliacao_somativa_namespace7)
    st.table(avaliacao_somativa_namespace_quartil)

# Visualiza√ß√£o das m√©tricas do namespace selecionado
with st.expander("Visualizar os resultados de Avalia√ß√£o Somativa do namespace selecionado por m√©trica -> (clique aqui üñ±Ô∏è)"):
    for coluna in avaliacao_somativa_namespace_select.loc[:,'Porcentagem de engajamento em AAs':'Porcentagem de administradores que visualizaram relat√≥rios de AA']:
        if avaliacao_somativa_namespace_select[coluna][0] >= avaliacao_somativa_namespace5[coluna].mean():
            comparativo_media_avaliacao_somativa = ' üü©'
        else:
            comparativo_media_avaliacao_somativa = ' üü®'
        st.markdown('**'+coluna+' (Pontua√ß√£o: '+str(round(100*avaliacao_somativa_namespace_select[coluna][0], 2))+comparativo_media_avaliacao_somativa+')**') 
        if coluna == 'Porcentagem de engajamento em AAs':
            st.write('Essa m√©trica consiste na raz√£o entre o n√∫mero de exerc√≠cios realizados em rela√ß√£o aos disponibilizados (m√©dia entre os alunos)')
        if coluna == 'Corre√ß√£o de exerc√≠cios discursivos':
            st.write('Essa m√©trica consiste no tempo m√©dio de corre√ß√£o de exerc√≠cios discursivos por quest√£o por aluno')
        if coluna == 'Cria√ß√£o de AA':
            st.write('Essa m√©trica consiste no tempo m√©dio entre a cria√ß√£o da AA e sua publica√ß√£o')
        if coluna == 'Publica√ß√£o da AA':
            st.write('Essa m√©trica consiste no tempo m√©dio entre a publica√ß√£o da AA e seu in√≠cio')
        if coluna == 'Acesso √† relat√≥rios de AA por aluno':
            st.write('Essa m√©trica consiste na raz√£o entre o n√∫mero de AAs diferentes que o aluno visualizou o relat√≥rio e o n√∫mero de AAs que esteve disponibilizado para ele.')
        if coluna == 'Porcentagem de visualiza√ß√£o de relat√≥rios de AA por professor':
            st.write('Essa m√©trica consiste na raz√£o entre o n√∫mero de AAs diferentes que o professor viu o relat√≥rio dentre as que ele √© corretor/dono n√∫mero.')
        st.progress(avaliacao_somativa_namespace_select[coluna][0])
        st.write('Pontua√ß√£o **M√©dia Eduqo: '+str(round(100*avaliacao_somativa_namespace5[coluna].mean(), 2))+'**')

